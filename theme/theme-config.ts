import { MD3Colors, ThemeProp } from "react-native-paper/lib/typescript/types";

const generatedColorsLight: MD3Colors = {
  primary: "rgb(85, 85, 169)",
  onPrimary: "rgb(255, 255, 255)",
  primaryContainer: "rgb(226, 223, 255)",
  onPrimaryContainer: "rgb(14, 6, 100)",
  secondary: "rgb(104, 79, 164)",
  onSecondary: "rgb(255, 255, 255)",
  secondaryContainer: "rgb(233, 221, 255)",
  onSecondaryContainer: "rgb(35, 0, 92)",
  tertiary: "rgb(87, 75, 200)",
  onTertiary: "rgb(255, 255, 255)",
  tertiaryContainer: "rgb(227, 223, 255)",
  onTertiaryContainer: "rgb(20, 0, 103)",
  error: "rgb(186, 26, 26)",
  onError: "rgb(255, 255, 255)",
  errorContainer: "rgb(255, 218, 214)",
  onErrorContainer: "rgb(65, 0, 2)",
  background: "rgb(255, 251, 255)",
  onBackground: "rgb(28, 27, 31)",
  surface: "rgb(255, 251, 255)",
  onSurface: "rgb(28, 27, 31)",
  surfaceVariant: "rgb(228, 225, 236)",
  onSurfaceVariant: "rgb(71, 70, 79)",
  outline: "rgb(119, 118, 128)",
  outlineVariant: "rgb(200, 197, 208)",
  shadow: "rgb(0, 0, 0)",
  scrim: "rgb(0, 0, 0)",
  inverseSurface: "rgb(49, 48, 52)",
  inverseOnSurface: "rgb(243, 239, 244)",
  inversePrimary: "rgb(194, 193, 255)",
  elevation: {
    level0: "transparent",
    level1: "rgb(247, 243, 251)",
    level2: "rgb(241, 238, 248)",
    level3: "rgb(236, 233, 246)",
    level4: "rgb(235, 231, 245)",
    level5: "rgb(231, 228, 243)",
  },
  surfaceDisabled: "rgba(28, 27, 31, 0.12)",
  onSurfaceDisabled: "rgba(28, 27, 31, 0.38)",
  backdrop: "rgba(48, 48, 56, 0.4)",
};
const generatedColorsDark: MD3Colors = {
  primary: "rgb(194, 193, 255)",
  onPrimary: "rgb(37, 36, 119)",
  primaryContainer: "rgb(61, 60, 143)",
  onPrimaryContainer: "rgb(226, 223, 255)",
  secondary: "rgb(208, 188, 255)",
  onSecondary: "rgb(56, 30, 114)",
  secondaryContainer: "rgb(79, 55, 138)",
  onSecondaryContainer: "rgb(233, 221, 255)",
  tertiary: "rgb(197, 192, 255)",
  onTertiary: "rgb(38, 11, 154)",
  tertiaryContainer: "rgb(62, 48, 176)",
  onTertiaryContainer: "rgb(227, 223, 255)",
  error: "rgb(255, 180, 171)",
  onError: "rgb(105, 0, 5)",
  errorContainer: "rgb(147, 0, 10)",
  onErrorContainer: "rgb(255, 180, 171)",
  background: "rgb(28, 27, 31)",
  onBackground: "rgb(229, 225, 230)",
  surface: "rgb(28, 27, 31)",
  onSurface: "rgb(229, 225, 230)",
  surfaceVariant: "rgb(71, 70, 79)",
  onSurfaceVariant: "rgb(200, 197, 208)",
  outline: "rgb(145, 143, 154)",
  outlineVariant: "rgb(71, 70, 79)",
  shadow: "rgb(0, 0, 0)",
  scrim: "rgb(0, 0, 0)",
  inverseSurface: "rgb(229, 225, 230)",
  inverseOnSurface: "rgb(49, 48, 52)",
  inversePrimary: "rgb(85, 85, 169)",
  elevation: {
    level0: "transparent",
    level1: "rgb(36, 35, 42)",
    level2: "rgb(41, 40, 49)",
    level3: "rgb(46, 45, 56)",
    level4: "rgb(48, 47, 58)",
    level5: "rgb(51, 50, 62)",
  },
  surfaceDisabled: "rgba(229, 225, 230, 0.12)",
  onSurfaceDisabled: "rgba(229, 225, 230, 0.38)",
  backdrop: "rgba(48, 48, 56, 0.4)",
};

export const getTheme = (isDarkMode: boolean): ThemeProp => {
  const theme: ThemeProp = {
    colors: isDarkMode ? generatedColorsDark : generatedColorsLight,
  };
  return theme;
};
